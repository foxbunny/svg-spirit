@use "style/reset";
@use "style/variables";

%visually-hidden {
	position: absolute;
	right: 100vw;
	opacity: 0;
}

%has-tooltip {
	position: relative;

	> [role=tooltip] {
		position: absolute;
		padding: 0.5em;
		z-index: 1;

		background: var(--tooltip-bg);
		color: var(--tooltip-fg);
		border: 1px solid var(--tooltip-fg);
		border-radius: 0.2em;
		font-size: var(--small-text);
		white-space: nowrap;
		transition: opacity 0s 1s;
	}

	&:not(:focus-visible, :focus-within, :hover) > [role=tooltip] {
		position: absolute;
		opacity: 0;
		pointer-events: none;
		transition-delay: 0s;
	}
}

%tooltip-above {
	> [role=tooltip] {
		bottom: 100%;
		left: 50%;
		transform: translateX(-50%);
	}
}

%tooltip-left {
	> [role=tooltip] {
		top: 50%;
		right: 100%;
		transform: translateY(-50%);
	}
}

%tooltip-right {
	> [role=tooltip] {
		top: 50%;
		left: 100%;
		transform: translateY(-50%);
	}
}

%tooltip-bottom {
	> [role=tooltip] {
		left: 50%;
		top: 100%;
		transform: translateX(-50%);
	}
}

%tooltip-bottom-right {
	> [role=tooltip] {
		right: 0;
		top: 100%;
	}
}

%toolbox {
	button, a, label {
		color: var(--primary);
		display: flex;
		flex-direction: column;
		gap: 0.5em;
		align-items: center;
		padding: 0.2em;
		flex: none;

		border: none;
		border-radius: 0.2em;
		background: transparent;
		text-align: center;
	}

	button:disabled, a:not([href]) {
		color: var(--disabled-fg);
	}

	a {
		text-decoration: none;
	}

	label:focus-within {
		@extend :focus-visible;
	}

	input[type=file] {
		@extend %visually-hidden;
	}
}

%text-field {
	width: 100%;
	height: var(--control-size);
	padding: 0 0.5em;

	border: 1px solid var(--control-border-color);
	border-radius: 0.2em;
}

%plain-button {
	height: var(--control-size);
	padding: 0 0.5em;

	border: 1px solid var(--control-border-color);
	border-radius: 0.2em;
}

.icon {
	--icon-primary: currentColor;
	--icon-stroke: 1px;
	--icon-size: 1.5em;
	width: var(--icon-size);
	height: var(--icon-size);
}

:focus-visible {
	outline: thick var(--active-border);
	outline: 2px solid var(--active-border);
}

body {
	font-family: Quicksand, sans-serif;
	height: 100vh;
	overflow: hidden;
}

@media (max-width: 70em) {
	#content {
		position: relative;
	}
}

@media (min-width: 70em) {
	#content {
		display: flex;
		align-items: stretch;
		height: 100vh;
		overflow-y: auto;

		scroll-snap-type: y mandatory;
		scroll-behavior: smooth;
	}
}

.panel {
	display: flex;
	flex-direction: column;
	height: 100vh;
	scroll-snap-align: start;

	h2 {
		@extend %visually-hidden;
	}
}

main {
	flex: 10000 0;

	background: var(--secondary);
}

section.panel {
	flex: 1;
	gap: 3em;
	padding: 1em;
	flex-shrink: 0;
	overflow-y: auto;

	background: var(--secondary-alt)
}

@media (width < 70em) {
	main {
		position: absolute;
		left: 0;
		top: 0;
		width: calc(100vw - 2em);
		min-width: 20em;
		z-index: 1;

		transition: transform 0.4s;
		box-shadow: 0.2em 0 0.5em rgba(0, 0, 0, 0.3);

		[data-settings-open] & {
			transform: translateX(max(4em - 100%, -28em));
		}
	}

	section.panel {
		position: absolute;
		top: 0;
		right: 0;
		width: min(100% - 4em, 30em);
	}
}

@media (width >= 70em) {
	main {
		min-width: min(100%, 40em);
	}

	section.panel {
		min-width: min(100%, 30em);
	}
}

header {
	display: flex;
	justify-content: space-between;
	gap: 2em;
	padding: 1em;
}

h1 {
	background-image: url('img/logo-light.svg');
	background-repeat: no-repeat;
	overflow: hidden;
	width: 10em;
	height: 1.9em;
	text-indent: -1000vw;
	margin-top: 0.5em;
	flex: none;

	[data-mode=dark] & {
		background-image: url('img/logo-dark.svg');
	}

	@media (width < 30em) {
		background-image: url('img/favicon.svg');
		width: 1.9em;
	}
}

#toolbar {
	@extend %toolbox;
	display: flex;
	align-items: stretch;
	flex-wrap: wrap;
	gap: 0.5em;
	flex: none;
	max-width: 100%;

	.icon {
		--icon-size: 2em;
	}

	button, a, label {
		@extend %has-tooltip;
		@extend %tooltip-bottom;

		&:hover:not(:disabled, a:not([href])) {
			@extend :focus-visible;
		}
	}
}

button#settings {
	use:last-child {
		display: none;
	}

	@media (width >= 70em) {
		display: none;
	}
}


[data-settings-open] #settings {
	use:first-child {
		display: none;
	}

	use:last-child {
		display: initial;
	}
}

#dark-light use:last-child {
	transition: opacity var(--dark-mode-transition) 0.4s;
}

[data-mode=dark] #dark-light use:last-child {
	opacity: 0;
}

#spritesheet-editor {
	display: flex;
	flex-direction: column;
	gap: 1em;
	flex: 1;
	overflow: hidden;

	legend {
		@extend %visually-hidden;
	}
}

#spritesheet-editor-main {
	display: flex;
	min-height: 0;
}

#spritesheet-tools {
	display: flex;
	flex-direction: column;
	gap: 0.5em;
	justify-content: flex-start;
	flex: none;

	button, a, label {
		@extend %tooltip-right;

		&:hover:not(:disabled) {
			@extend :focus-visible;
		}
	}
}

#spritesheet-tools-secondary {
	display: flex;
	flex-wrap: wrap;
	gap: 0.5em;
	justify-content: flex-end;

	button, a, label {
		@extend %tooltip-bottom;
	}
}

#spritesheet-tools,
#spritesheet-tools-secondary {
	@extend %toolbox;
	padding: 2px 1em;
	gap: 1em;

	.icon {
		--icon-size: 2em;
	}

	button, a, label {
		@extend %has-tooltip;

		&:hover:not(:disabled, a:not([hover])) {
			@extend :focus-visible;
		}
	}
}

#spritesheet {
	overflow-y: auto;
	max-height: 100%;
	display: flex;
	flex: 1;
	padding: 0 1em 1em;

	scroll-snap-type: y mandatory;

	&[data-layout=tiles] {
		flex-wrap: wrap;
		gap: 1em;
	}

	&[data-layout=list] {
		flex-direction: column;
		gap: 0.5em;
	}
}

.sprite {
	--transition-duration: var(--dark-mode-transition);
	--sprite-border-width: 1px;
	padding: 2px;

	scroll-snap-align: start;
	transition-duration: var(--transition-duration);
	transition-property: background-color, border-color;

	label {
		display: flex;
		align-items: center;
		gap: 1em;

		transition-duration: var(--transition-duration);
		transition-property: background-color, border-color;
		background-color: var(--secondary-alt);
	}

	[data-layout=tiles] & label {
		flex-direction: column;
		padding: 1em;
		width: 7em;
		position: relative;

		border: var(--sprite-border-width) solid var(--control-border-color);
		border-radius: 0.2em;
		text-align: center;
	}

	[data-layout=list] & label {
		padding: 0.5em;

		border: 1px solid var(--control-border-color);
		border-radius: 0.2em;
	}

	input[type=checkbox] {
		@extend %visually-hidden;
	}

	input:checked + label {
		border-color: var(--selected-border);
		background: var(--selected-bg);
	}

	input:focus-visible + label {
		outline: 2px solid var(--active-border);
	}

	[data-layout=tiles] & label > span {
		white-space: nowrap;
		overflow: hidden;
		max-width: 8em;
		padding: 0.2em 0.5em;

		text-overflow: ellipsis;
		border: 1px solid transparent;
		border-radius: 0.2em;
		transition: background-color 0.3s, border-color 0.3s;
		font-size: var(--min-font-size);
	}

	[data-layout=tiles] &:hover > label > span {
		max-width: none;

		background: var(--secondary-alt);
		border-color: var(--primary);
		z-index: 1;
	}

	svg {
		background-color: white;
	}

	[data-layout=tiles] & svg {
		--bg-dark: #ddd;
		width: 4em;
		height: 4em;

		background-image: linear-gradient(45deg, var(--bg-dark) 25%, transparent 25%),
		linear-gradient(-45deg, var(--bg-dark) 25%, transparent 25%),
		linear-gradient(45deg, transparent 75%, var(--bg-dark) 75%),
		linear-gradient(-45deg, transparent 75%, var(--bg-dark) 75%);
		background-size: 1em 1em;
		background-position: 0 0, 0 10px, 0.5em -0.5em, -0.5em 0px;
	}

	[data-layout=list] & svg {
		width: 2em;
		height: 2em;
	}
}

.settings-panel:not([hidden]) {
	display: flex;
	flex-direction: column;
	gap: 1em;

	h3 {
		padding: 0.5em 0;

		border-bottom: 1px solid var(--primary);
		text-transform: uppercase;
		font-size: var(--min-font-size);
		letter-spacing: 0.1em;
	}

	button {
		border: none;
		background: transparent;
		color: inherit;

		&:disabled {
			color: var(--disabled-fg);
		}
	}

	button > span {
		@extend %visually-hidden;
	}
}

.style-value {
	display: flex;
	justify-content: space-between;
	align-items: center;
	gap: 0.5em;
	padding: 0.5em 0;

	button {
		display: inline-flex;
		flex: none;
		border-radius: 0.2em;

		&:hover {
			@extend :focus-visible;
		}
	}

	label:not(:first-child) {
		flex: 1;
	}

	label:not(:first-child) > input {
		@extend %text-field;
	}

	label > span {
		@extend %visually-hidden;
	}
}

.color {
	input[type=color] {
		width: var(--control-size);
		height: var(--control-size);
		padding: 0.2em;
		cursor: pointer;

		border: 1px solid var(--control-border-color);
		border-radius: 0.2em;
		background-color: var(--secondary);

		&:hover {
			@extend :focus-visible;
		}
	}

	span:nth-child(2) {
		height: var(--control-size);
		display: flex;
		align-items: center;
		justify-content: center;
		padding: 0 0.5em;
		width: 5em;

		border: 1px solid var(--control-border-color);
		border-radius: 0.2em;
		background-color: var(--secondary);
	}
}

.stroke-width {
	label:first-child > input {
		@extend %text-field;
		width: 7.3em; // NB: width of color input + gap + color value
		text-align: right;
	}
}

dialog {
	background: var(--secondary);
	border: 1px solid var(--control-border-color);
	border-radius: 0.2em;
	box-shadow: 0 0.2em 0.5em rgba(0, 0, 0, 0.3);

	h2 {
		padding: 0.4em 1em;
		text-transform: uppercase;
		text-align: center;
		background: var(--primary);
		color: var(--secondary);
	}

	& > :not(:first-child) {
		padding: 1em;
	}

	.actions {
		display: flex;
		justify-content: flex-end;
		gap: 0.5em;
		padding-top: 1em;
		margin-top: 1em;
		border-top: 1px solid var(--control-border-color);
	}

	.actions button {
		@extend %plain-button;

		&:hover:not(:disabled) {
			@extend :focus-visible;
		}
	}

	.actions button:last-child {
		background: var(--negative);
		color: var(--secondary);
	}

	li {
		--color: none;
		margin-bottom: 0.5em;

		background: var(--secondary-alt);
		transition-duration: 0.4s;
		transition-property: background-color, border-color;

		&:last-child {
			margin-bottom: 0;
		}

		:has(:checked) {
			background: var(--selected-bg);
			border-color: var(--selected-border);
		}
	}

	label {
		display: flex;
		align-items: center;
		padding: 0.5em;
		gap: 1em;

		border: 1px solid var(--control-border-color);
		border-radius: 0.2em;

		&:focus-within {
			@extend :focus-visible;
		}
	}

	input[type=radio]:focus-visible {
		outline: none;
	}
}

.replacement-color {
	--color: transparent;

	label > span {
		display: inline-flex;
		gap: 0.5em;
		align-items: center;

		&::before {
			content: '';
			display: block;
			width: 1em;
			height: 1em;
			background: var(--color);
			border: 1px solid var(--control-border-color);
		}
	}
}
